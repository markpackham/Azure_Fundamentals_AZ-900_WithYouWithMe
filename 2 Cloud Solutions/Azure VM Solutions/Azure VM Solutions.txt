Azure VM Solutions


Scaling VMs in the Cloud

It's no surprise that when it comes to configuring your VM solution to be able to scale, Azure, AWS and Google all provide extremely robust and simple to execute services to cater for this need.

Being able to scale your VMs will likely:

Improve server/application performance 
Increase the overall 'uptime' (availability) of your server
Ensure you are only paying for the additional resources when you need it
Before we look at how we would scale a VM in Azure, let's look at the two valid ways in which you can scale a machine, 'scaling up' and 'scaling out'.


By adding more resources, typically memory or CPU to your existing solution. This is also known as 'Vertical Scaling'

Instead of adding more resources to your server, you can elect to scale multiple copies of the same server to balance the load during peak periods.


Scaling the Azure Way

Scaling your VMs in Azure

To scale your VMs in Azure, you can group them together to provide high availability, scalability, and redundancy. No matter what your uptime requirements are, Azure has several features that can meet them. These features are available as:

Virtual machine scale sets

Azure Batch


Virtual machine scale sets let you create and manage a group of identical, load-balanced VMs.

Scale sets allow you to centrally manage, configure, and update many VMs in minutes to provide highly available applications. 
The number of VM instances can automatically increase or decrease in response to demand or a defined schedule.
With virtual machine scale sets, you can build large-scale services for areas such as compute, big data, and container workloads. 


Azure Batch

Azure Batch enables large-scale parallel and high-performance computing (HPC) batch jobs with the ability to scale to tens, hundreds, or thousands of VMs.

When you're ready to run a job, Batch does the following:

Starts a pool of compute VMs for you.

Installs applications and staging data.

Runs jobs with as many tasks as you have.

Identifies failures.

Requeues work.

Scales down the pool as work completes.



When it comes to deciding which type of scaling is best, vertical or horizontal, it boil down to what type of application you are using. 

If your environment has been designed as a microservices architecture in mind, where its components have been largely 'decoupled', then scaling out will be the best choice.

On the other hand, if your solution relies on a hosted instance of an Oracle Database or another legacy stand-alone business application, then scaling up might be ideal.