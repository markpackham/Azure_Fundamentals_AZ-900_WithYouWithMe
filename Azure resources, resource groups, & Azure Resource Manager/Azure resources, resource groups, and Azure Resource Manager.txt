Azure resources, resource groups, and Azure Resource Manager

Before you create a subscription, you will need to be ready to start creating resources and storing them in resource groups. 


Resource
A manageable item that's available through Azure. Virtual machines (VMs), storage accounts, web apps, databases, and virtual networks are examples of resources.


Resource Group
A container that holds related resources for an Azure solution. The resource group includes resources that you want to manage as a group. You decide which resources belong in a resource group based on what makes the most sense for your organization.


Azure resource groups

1 A resource group is a logical container for resources deployed on Azure. These resources are anything you create in an Azure subscription like VMs, Azure Application Gateway instances, and Azure Cosmos DB instances. 
 
2 All resources must be in a resource group

3 A resource can only be a member of a single resource group.

4 Many resources can be moved between resource groups with some services having specific limitations or requirements to move.

5 Resource groups can't be nested. Before any resource can be provisioned, you need a resource group for it to be placed in.


Logical grouping

Resource groups exist to help manage and organize your Azure resources.
By placing resources of similar usage, type, or location in a resource group, you can provide order and organization to resources you create in Azure.

Logical grouping is the aspect that you're most interested in here, because there's a lot of disorder among our resources.



Resource Life cycle

When it comes to managing resources, it's important to remember the following:

1 If you delete a resource group, all resources contained within it are also deleted.

2 Organizing resources by life cycle can be useful in nonproduction environments, where you might try an experiment and then dispose of it.

3 Resource groups make it easy to remove a set of resources all at once.


Azure Resource Manager

Azure Resource Manager is the deployment and management service for Azure. It provides a management layer that enables you to create, update, and delete resources in your Azure account. 

For example: You use management features such as access control, resource locks, and tags to secure and organize your resources after deployment.

When a user sends a request from any of the Azure tools, APIs, or SDKs, Resource Manager receives the request. It authenticates and authorizes the request. Resource Manager sends the request to the Azure service, which takes the requested action. Because all requests are handled through the same API, you see consistent results and capabilities in all the different tools.



Why would you want to use the Azure Resource Manager?

With Resource Manager, you can:

Manage your infrastructure through declarative templates rather than scripts. A Resource Manager template is a JSON file that defines what you want to deploy to Azure.

Deploy, manage, and monitor all the resources for your solution as a group, rather than handling these resources individually.

Redeploy your solution throughout the development life cycle and have confidence your resources are deployed in a consistent state.

Define the dependencies between resources so they're deployed in the correct order.

Apply access control to all services because RBAC is natively integrated into the management platform. Role-based access control (RBAC) is a model for authorizing end-user access to systems, applications and data based on a user's predefined role.

Apply tags to resources to logically organize all the resources in your subscription.

Clarify your organization's billing by viewing costs for a group of resources that share the same tag.